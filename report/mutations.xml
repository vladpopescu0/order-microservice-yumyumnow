<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RestaurantService.java</sourceFile><mutatedClass>nl.tudelft.sem.template.order.domain.user.RestaurantService</mutatedClass><mutatedMethod>calculateDistance</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>14</index></indexes><blocks><block>0</block></blocks><killingTest>nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest.[engine:junit-jupiter]/[class:nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest]/[method:calculateDistanceWithin100m()]</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RestaurantService.java</sourceFile><mutatedClass>nl.tudelft.sem.template.order.domain.user.RestaurantService</mutatedClass><mutatedMethod>calculateDistance</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>16</index></indexes><blocks><block>0</block></blocks><killingTest>nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest.[engine:junit-jupiter]/[class:nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest]/[method:calculateDistanceWithin100m()]</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RestaurantService.java</sourceFile><mutatedClass>nl.tudelft.sem.template.order.domain.user.RestaurantService</mutatedClass><mutatedMethod>calculateDistance</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>19</index></indexes><blocks><block>1</block></blocks><killingTest>nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest.[engine:junit-jupiter]/[class:nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest]/[method:calculateDistanceWithin100m()]</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RestaurantService.java</sourceFile><mutatedClass>nl.tudelft.sem.template.order.domain.user.RestaurantService</mutatedClass><mutatedMethod>calculateDistance</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>20</index></indexes><blocks><block>1</block></blocks><killingTest>nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest.[engine:junit-jupiter]/[class:nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest]/[method:calculateDistanceWithin100m()]</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RestaurantService.java</sourceFile><mutatedClass>nl.tudelft.sem.template.order.domain.user.RestaurantService</mutatedClass><mutatedMethod>calculateDistance</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>23</index></indexes><blocks><block>1</block></blocks><killingTest>nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest.[engine:junit-jupiter]/[class:nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest]/[method:calculateDistanceWithin100m()]</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RestaurantService.java</sourceFile><mutatedClass>nl.tudelft.sem.template.order.domain.user.RestaurantService</mutatedClass><mutatedMethod>calculateDistance</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>29</index></indexes><blocks><block>2</block></blocks><killingTest>nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest.[engine:junit-jupiter]/[class:nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest]/[method:calculateDistanceWithin100m()]</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RestaurantService.java</sourceFile><mutatedClass>nl.tudelft.sem.template.order.domain.user.RestaurantService</mutatedClass><mutatedMethod>calculateDistance</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>31</index></indexes><blocks><block>3</block></blocks><killingTest>nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest.[engine:junit-jupiter]/[class:nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest]/[method:calculateDistanceWithin100m()]</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RestaurantService.java</sourceFile><mutatedClass>nl.tudelft.sem.template.order.domain.user.RestaurantService</mutatedClass><mutatedMethod>calculateDistance</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>35</index></indexes><blocks><block>3</block></blocks><killingTest>nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest.[engine:junit-jupiter]/[class:nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest]/[method:calculateDistanceWithin100m()]</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RestaurantService.java</sourceFile><mutatedClass>nl.tudelft.sem.template.order.domain.user.RestaurantService</mutatedClass><mutatedMethod>calculateDistance</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>37</index></indexes><blocks><block>3</block></blocks><killingTest>nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest.[engine:junit-jupiter]/[class:nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest]/[method:calculateDistanceWithin100m()]</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RestaurantService.java</sourceFile><mutatedClass>nl.tudelft.sem.template.order.domain.user.RestaurantService</mutatedClass><mutatedMethod>calculateDistance</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>41</index></indexes><blocks><block>4</block></blocks><killingTest>nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest.[engine:junit-jupiter]/[class:nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest]/[method:calculateDistanceWithin100m()]</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RestaurantService.java</sourceFile><mutatedClass>nl.tudelft.sem.template.order.domain.user.RestaurantService</mutatedClass><mutatedMethod>calculateDistance</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>42</index></indexes><blocks><block>4</block></blocks><killingTest>nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest.[engine:junit-jupiter]/[class:nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest]/[method:calculateDistanceWithin100m()]</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RestaurantService.java</sourceFile><mutatedClass>nl.tudelft.sem.template.order.domain.user.RestaurantService</mutatedClass><mutatedMethod>calculateDistance</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>44</index></indexes><blocks><block>4</block></blocks><killingTest>nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest.[engine:junit-jupiter]/[class:nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest]/[method:calculateDistanceWithin100m()]</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RestaurantService.java</sourceFile><mutatedClass>nl.tudelft.sem.template.order.domain.user.RestaurantService</mutatedClass><mutatedMethod>calculateDistance</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>45</index></indexes><blocks><block>4</block></blocks><killingTest>nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest.[engine:junit-jupiter]/[class:nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest]/[method:calculateDistanceWithin100m()]</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RestaurantService.java</sourceFile><mutatedClass>nl.tudelft.sem.template.order.domain.user.RestaurantService</mutatedClass><mutatedMethod>calculateDistance</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>53</index></indexes><blocks><block>6</block></blocks><killingTest>nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest.[engine:junit-jupiter]/[class:nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest]/[method:calculateDistanceWithin100m()]</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RestaurantService.java</sourceFile><mutatedClass>nl.tudelft.sem.template.order.domain.user.RestaurantService</mutatedClass><mutatedMethod>calculateDistance</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>54</index></indexes><blocks><block>6</block></blocks><killingTest>nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest.[engine:junit-jupiter]/[class:nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest]/[method:calculateDistanceWithin100m()]</killingTest><description>replaced double return with 0.0d for nl/tudelft/sem/template/order/domain/user/RestaurantService::calculateDistance</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RestaurantService.java</sourceFile><mutatedClass>nl.tudelft.sem.template.order.domain.user.RestaurantService</mutatedClass><mutatedMethod>getAllRestaurants</mutatedMethod><methodDescription>(Ljava/util/UUID;)Ljava/util/List;</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>21</index></indexes><blocks><block>3</block></blocks><killingTest>nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest.[engine:junit-jupiter]/[class:nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest]/[method:getAllRestaurantsNoVendorsMatch()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RestaurantService.java</sourceFile><mutatedClass>nl.tudelft.sem.template.order.domain.user.RestaurantService</mutatedClass><mutatedMethod>getAllRestaurants</mutatedMethod><methodDescription>(Ljava/util/UUID;)Ljava/util/List;</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>24</index></indexes><blocks><block>5</block></blocks><killingTest>nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest.[engine:junit-jupiter]/[class:nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest]/[method:getAllRestaurantsNoVendorsMatch()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RestaurantService.java</sourceFile><mutatedClass>nl.tudelft.sem.template.order.domain.user.RestaurantService</mutatedClass><mutatedMethod>getAllRestaurants</mutatedMethod><methodDescription>(Ljava/util/UUID;)Ljava/util/List;</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>55</index></indexes><blocks><block>12</block></blocks><killingTest>nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest.[engine:junit-jupiter]/[class:nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest]/[method:getAllRestaurantsPartialVendors()]</killingTest><description>replaced return value with Collections.emptyList for nl/tudelft/sem/template/order/domain/user/RestaurantService::getAllRestaurants</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RestaurantService.java</sourceFile><mutatedClass>nl.tudelft.sem.template.order.domain.user.RestaurantService</mutatedClass><mutatedMethod>getUserLocation</mutatedMethod><methodDescription>(Ljava/util/UUID;)Ljava/util/List;</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>32</index></indexes><blocks><block>4</block></blocks><killingTest>nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest.[engine:junit-jupiter]/[class:nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest]/[method:getUserLocationValid()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RestaurantService.java</sourceFile><mutatedClass>nl.tudelft.sem.template.order.domain.user.RestaurantService</mutatedClass><mutatedMethod>getUserLocation</mutatedMethod><methodDescription>(Ljava/util/UUID;)Ljava/util/List;</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>35</index></indexes><blocks><block>6</block></blocks><killingTest>nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest.[engine:junit-jupiter]/[class:nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest]/[method:getUserLocationValid()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RestaurantService.java</sourceFile><mutatedClass>nl.tudelft.sem.template.order.domain.user.RestaurantService</mutatedClass><mutatedMethod>getUserLocation</mutatedMethod><methodDescription>(Ljava/util/UUID;)Ljava/util/List;</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>53</index></indexes><blocks><block>10</block></blocks><killingTest>nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest.[engine:junit-jupiter]/[class:nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest]/[method:getUserLocationValid()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RestaurantService.java</sourceFile><mutatedClass>nl.tudelft.sem.template.order.domain.user.RestaurantService</mutatedClass><mutatedMethod>getUserLocation</mutatedMethod><methodDescription>(Ljava/util/UUID;)Ljava/util/List;</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>80</index></indexes><blocks><block>16</block></blocks><killingTest>nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest.[engine:junit-jupiter]/[class:nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest]/[method:getUserAddressValid()]</killingTest><description>replaced return value with Collections.emptyList for nl/tudelft/sem/template/order/domain/user/RestaurantService::getUserLocation</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>RestaurantService.java</sourceFile><mutatedClass>nl.tudelft.sem.template.order.domain.user.RestaurantService</mutatedClass><mutatedMethod>lambda$processVendors$0</mutatedMethod><methodDescription>(DDDLjava/util/Map$Entry;)Z</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>23</index></indexes><blocks><block>7</block></blocks><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RestaurantService.java</sourceFile><mutatedClass>nl.tudelft.sem.template.order.domain.user.RestaurantService</mutatedClass><mutatedMethod>lambda$processVendors$0</mutatedMethod><methodDescription>(DDDLjava/util/Map$Entry;)Z</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>23</index></indexes><blocks><block>7</block></blocks><killingTest>nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest.[engine:junit-jupiter]/[class:nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest]/[method:processVendorsValid()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RestaurantService.java</sourceFile><mutatedClass>nl.tudelft.sem.template.order.domain.user.RestaurantService</mutatedClass><mutatedMethod>lambda$processVendors$0</mutatedMethod><methodDescription>(DDDLjava/util/Map$Entry;)Z</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>31</index></indexes><blocks><block>10</block></blocks><killingTest>nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest.[engine:junit-jupiter]/[class:nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest]/[method:processVendorsValid()]</killingTest><description>replaced boolean return with true for nl/tudelft/sem/template/order/domain/user/RestaurantService::lambda$processVendors$0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RestaurantService.java</sourceFile><mutatedClass>nl.tudelft.sem.template.order.domain.user.RestaurantService</mutatedClass><mutatedMethod>processVendors</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/util/HashMap;)Ljava/util/List;</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>45</index></indexes><blocks><block>10</block></blocks><killingTest>nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest.[engine:junit-jupiter]/[class:nl.tudelft.sem.template.order.domain.user.RestaurantServiceTest]/[method:processVendorsValid()]</killingTest><description>replaced return value with Collections.emptyList for nl/tudelft/sem/template/order/domain/user/RestaurantService::processVendors</description></mutation>
</mutations>
